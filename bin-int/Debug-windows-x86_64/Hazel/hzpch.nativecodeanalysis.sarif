{
  "version": "2.1.0",
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "results": [
        {
          "ruleId": "C6285",
          "message": {
            "text": "(<non-zero constant> || <non-zero constant>) is always a non-zero constant.  Did you intend to use the bitwise-and operator?"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/core.h"
                },
                "region": {
                  "startLine": 436,
                  "startColumn": 22
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::is_utf8",
                  "decoratedName": "?is_utf8@detail@v8@fmt@@YA_NXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format-inl.h"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 9,
                  "endLine": 335,
                  "endColumn": 51
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::get_cached_power",
                  "decoratedName": "?get_cached_power@detail@v8@fmt@@YA?AUfp@123@HAEAH@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format-inl.h"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 9,
                  "endLine": 335,
                  "endColumn": 28
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::get_cached_power",
                  "decoratedName": "?get_cached_power@detail@v8@fmt@@YA?AUfp@123@HAEAH@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format-inl.h"
                },
                "region": {
                  "startLine": 1993,
                  "startColumn": 46,
                  "endLine": 1993,
                  "endColumn": 58
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::dragonbox::remove_trailing_zeros",
                  "decoratedName": "?remove_trailing_zeros@dragonbox@detail@v8@fmt@@YAHAEA_K@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26800",
          "message": {
            "text": "Use of a moved from object: ''user_chars'' (lifetime.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                },
                "region": {
                  "startLine": 1427,
                  "startColumn": 9,
                  "endLine": 1427,
                  "endColumn": 9
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "spdlog::pattern_formatter::compile_pattern_",
                  "decoratedName": "?compile_pattern_@pattern_formatter@spdlog@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z",
                  "kind": "function"
                }
              ]
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1386,
                            "startColumn": 39
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1388,
                            "startColumn": 10
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1388,
                            "startColumn": 23
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1389,
                            "startColumn": 51
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1389,
                            "startColumn": 61
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1390,
                            "startColumn": 22
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1391,
                            "startColumn": 15
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1391,
                            "startColumn": 27
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1391,
                            "startColumn": 40
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1391,
                            "startColumn": 40
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1393,
                            "startColumn": 13
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1393,
                            "startColumn": 17
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1395,
                            "startColumn": 17
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1395,
                            "startColumn": 17
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1397,
                            "startColumn": 44
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1397,
                            "startColumn": 48
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1397,
                            "startColumn": 38
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1397,
                            "startColumn": 48
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1400,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1400,
                            "startColumn": 50
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1400,
                            "startColumn": 50
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1400,
                            "startColumn": 44
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1400,
                            "startColumn": 28
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1402,
                            "startColumn": 20
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1402,
                            "startColumn": 20
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1415,
                            "startColumn": 17
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
                          },
                          "region": {
                            "startLine": 1427,
                            "startColumn": 9
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26437",
          "message": {
            "text": "Do not slice (es.63)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/core.h"
                },
                "region": {
                  "startLine": 696,
                  "startColumn": 58,
                  "endLine": 696,
                  "endColumn": 66
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::basic_format_parse_context<char,fmt::v8::detail::error_handler>::error_handler",
                  "decoratedName": "?error_handler@?$basic_format_parse_context@DUerror_handler@detail@v8@fmt@@@v8@fmt@@QEBA?AU0detail@23@XZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/core.h"
                },
                "region": {
                  "startLine": 2293,
                  "startColumn": 42,
                  "endLine": 2293,
                  "endColumn": 50
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::parse_nonnegative_int",
                  "decoratedName": "??$parse_nonnegative_int@D@detail@v8@fmt@@YAHAEAPEBDPEBDH@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26498",
          "message": {
            "text": "The function 'fmt::v8::detail::exponent_mask<float>' is constexpr, mark variable 'mask' constexpr if compile-time evaluation is desired (con.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 2052,
                  "startColumn": 8,
                  "endLine": 2052,
                  "endColumn": 36
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write",
                  "decoratedName": "??$write@DVappender@v8@fmt@@M$0A@@detail@v8@fmt@@YA?AVappender@12@V312@M@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26498",
          "message": {
            "text": "The function 'fmt::v8::detail::exponent_mask<double>' is constexpr, mark variable 'mask' constexpr if compile-time evaluation is desired (con.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 2052,
                  "startColumn": 8,
                  "endLine": 2052,
                  "endColumn": 36
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write",
                  "decoratedName": "??$write@DVappender@v8@fmt@@N$0A@@detail@v8@fmt@@YA?AVappender@12@V312@N@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26498",
          "message": {
            "text": "The function 'fmt::v8::detail::exponent_mask<double>' is constexpr, mark variable 'mask' constexpr if compile-time evaluation is desired (con.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 2052,
                  "startColumn": 8,
                  "endLine": 2052,
                  "endColumn": 36
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write",
                  "decoratedName": "??$write@DVappender@v8@fmt@@O$0A@@detail@v8@fmt@@YA?AVappender@12@V312@O@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1814,
                  "startColumn": 17,
                  "endLine": 1814,
                  "endColumn": 61
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1869,
                  "startColumn": 34,
                  "endLine": 1869,
                  "endColumn": 59
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1884,
                  "startColumn": 13,
                  "endLine": 1884,
                  "endColumn": 57
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 46
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 29
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1814,
                  "startColumn": 17,
                  "endLine": 1814,
                  "endColumn": 61
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1869,
                  "startColumn": 34,
                  "endLine": 1869,
                  "endColumn": 59
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1884,
                  "startColumn": 13,
                  "endLine": 1884,
                  "endColumn": 57
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 46
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 29
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1814,
                  "startColumn": 17,
                  "endLine": 1814,
                  "endColumn": 61
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1869,
                  "startColumn": 34,
                  "endLine": 1869,
                  "endColumn": 59
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1884,
                  "startColumn": 13,
                  "endLine": 1884,
                  "endColumn": 57
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 46
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 29
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1814,
                  "startColumn": 17,
                  "endLine": 1814,
                  "endColumn": 61
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1869,
                  "startColumn": 34,
                  "endLine": 1869,
                  "endColumn": 59
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1884,
                  "startColumn": 13,
                  "endLine": 1884,
                  "endColumn": 57
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 46
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 29
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v8@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26498",
          "message": {
            "text": "The function 'fmt::v8::detail::num_significand_bits<double>' is constexpr, mark variable 'implicit_bit' constexpr if compile-time evaluation is desired (con.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format-inl.h"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 18,
                  "endLine": 290,
                  "endColumn": 69
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::normalize",
                  "decoratedName": "??$normalize@$0A@@detail@v8@fmt@@YA?AUfp@012@U3012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26498",
          "message": {
            "text": "The function 'fmt::v8::detail::num_significand_bits<double>' is constexpr, mark variable 'offset' constexpr if compile-time evaluation is desired (con.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format-inl.h"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 14
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::normalize",
                  "decoratedName": "??$normalize@$0A@@detail@v8@fmt@@YA?AUfp@012@U3012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26498",
          "message": {
            "text": "The function 'fmt::v8::detail::num_significand_bits<float>' is constexpr, mark variable 'num_float_significand_bits' constexpr if compile-time evaluation is desired (con.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format-inl.h"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 15
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::fp::assign",
                  "decoratedName": "??$assign@M$0A@@fp@detail@v8@fmt@@QEAA_NM@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26498",
          "message": {
            "text": "The function 'fmt::v8::detail::num_significand_bits<double>' is constexpr, mark variable 'num_float_significand_bits' constexpr if compile-time evaluation is desired (con.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format-inl.h"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 15
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::fp::assign",
                  "decoratedName": "??$assign@N$0A@@fp@detail@v8@fmt@@QEAA_NN@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1814,
                  "startColumn": 17,
                  "endLine": 1814,
                  "endColumn": 61
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@Ubig_decimal_fp@detail@23@DV?$fallback_digit_grouping@D@523@@detail@v8@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1869,
                  "startColumn": 34,
                  "endLine": 1869,
                  "endColumn": 59
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@Ubig_decimal_fp@detail@23@DV?$fallback_digit_grouping@D@523@@detail@v8@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1884,
                  "startColumn": 13,
                  "endLine": 1884,
                  "endColumn": 57
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@Ubig_decimal_fp@detail@23@DV?$fallback_digit_grouping@D@523@@detail@v8@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 46
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@Ubig_decimal_fp@detail@23@DV?$fallback_digit_grouping@D@523@@detail@v8@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 29
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@Ubig_decimal_fp@detail@23@DV?$fallback_digit_grouping@D@523@@detail@v8@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1814,
                  "startColumn": 17,
                  "endLine": 1814,
                  "endColumn": 61
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@Ubig_decimal_fp@detail@23@DV?$digit_grouping@D@523@@detail@v8@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1869,
                  "startColumn": 34,
                  "endLine": 1869,
                  "endColumn": 59
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@Ubig_decimal_fp@detail@23@DV?$digit_grouping@D@523@@detail@v8@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1884,
                  "startColumn": 13,
                  "endLine": 1884,
                  "endColumn": 57
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@Ubig_decimal_fp@detail@23@DV?$digit_grouping@D@523@@detail@v8@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 46
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@Ubig_decimal_fp@detail@23@DV?$digit_grouping@D@523@@detail@v8@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1901,
                  "startColumn": 11,
                  "endLine": 1901,
                  "endColumn": 29
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::do_write_float",
                  "decoratedName": "??$do_write_float@Vappender@v8@fmt@@Ubig_decimal_fp@detail@23@DV?$digit_grouping@D@523@@detail@v8@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26498",
          "message": {
            "text": "The function 'fmt::v8::detail::num_significand_bits<long double>' is constexpr, mark variable 'num_float_significand_bits' constexpr if compile-time evaluation is desired (con.5)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format-inl.h"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 15
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::fp::assign",
                  "decoratedName": "??$assign@O$0A@@fp@detail@v8@fmt@@QEAA_NO@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26495",
          "message": {
            "text": "Variable 'fmt::v8::detail::thousands_sep_result<char>::thousands_sep' is uninitialized. Always initialize a member variable (type.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1055,
                  "startColumn": 1,
                  "endLine": 1055,
                  "endColumn": 1
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::thousands_sep_result<char>::{ctor}",
                  "decoratedName": "??0?$thousands_sep_result@D@detail@v8@fmt@@QEAA@XZ",
                  "kind": "function"
                }
              ]
            }
          ],
          "properties": {
            "targetSymbol": "fmt::v8::detail::thousands_sep_result<char>::thousands_sep"
          }
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 28,
                  "endLine": 1431,
                  "endColumn": 65
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_int",
                  "decoratedName": "??$write_int@Vappender@v8@fmt@@DV<lambda_9c46d95b5291f4db0a9ff0f34ba5ffd1>@@@detail@v8@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V<lambda_9c46d95b5291f4db0a9ff0f34ba5ffd1>@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 28,
                  "endLine": 1431,
                  "endColumn": 65
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_int",
                  "decoratedName": "??$write_int@Vappender@v8@fmt@@DV<lambda_384e0b715c7d78f13bdad19ef73e79c2>@@@detail@v8@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V<lambda_384e0b715c7d78f13bdad19ef73e79c2>@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 28,
                  "endLine": 1431,
                  "endColumn": 65
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_int",
                  "decoratedName": "??$write_int@Vappender@v8@fmt@@DV<lambda_24316ed3afe2c2c077dd485b0647dd76>@@@detail@v8@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V<lambda_24316ed3afe2c2c077dd485b0647dd76>@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 28,
                  "endLine": 1431,
                  "endColumn": 65
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_int",
                  "decoratedName": "??$write_int@Vappender@v8@fmt@@DV<lambda_a8059eee15c17d567b7f67c39e807700>@@@detail@v8@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V<lambda_a8059eee15c17d567b7f67c39e807700>@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 28,
                  "endLine": 1431,
                  "endColumn": 65
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_int",
                  "decoratedName": "??$write_int@Vappender@v8@fmt@@DV<lambda_99037c8e973eb29a6310201c521a7518>@@@detail@v8@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V<lambda_99037c8e973eb29a6310201c521a7518>@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 28,
                  "endLine": 1431,
                  "endColumn": 65
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_int",
                  "decoratedName": "??$write_int@Vappender@v8@fmt@@DV<lambda_dec942c97f1726634bd5251cb326b9dd>@@@detail@v8@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V<lambda_dec942c97f1726634bd5251cb326b9dd>@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 28,
                  "endLine": 1431,
                  "endColumn": 65
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_int",
                  "decoratedName": "??$write_int@Vappender@v8@fmt@@DV<lambda_d9c5e86314b46c3842d6f8abc71474f2>@@@detail@v8@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V<lambda_d9c5e86314b46c3842d6f8abc71474f2>@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 28,
                  "endLine": 1431,
                  "endColumn": 65
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_int",
                  "decoratedName": "??$write_int@Vappender@v8@fmt@@DV<lambda_a6db805885e634a918ea789ea1a38f22>@@@detail@v8@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V<lambda_a6db805885e634a918ea789ea1a38f22>@@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1406,
                  "startColumn": 15,
                  "endLine": 1406,
                  "endColumn": 43
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_int_data<char>::{ctor}",
                  "decoratedName": "??0?$write_int_data@D@detail@v8@fmt@@QEAA@HIAEBU?$basic_format_specs@D@23@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1414,
                  "startColumn": 15,
                  "endLine": 1414,
                  "endColumn": 48
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_int_data<char>::{ctor}",
                  "decoratedName": "??0?$write_int_data@D@detail@v8@fmt@@QEAA@HIAEBU?$basic_format_specs@D@23@@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1745,
                  "startColumn": 10,
                  "endLine": 1745,
                  "endColumn": 29
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_significand",
                  "decoratedName": "??$write_significand@DI$0A@@detail@v8@fmt@@YAPEADPEADIHHD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 1745,
                  "startColumn": 10,
                  "endLine": 1745,
                  "endColumn": 29
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "fmt::v8::detail::write_significand",
                  "decoratedName": "??$write_significand@D_K$0A@@detail@v8@fmt@@YAPEADPEAD_KHHD@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        }
      ],
      "tool": {
        "driver": {
          "name": "PREfast",
          "fullName": "PREfast Code Analysis",
          "version": "14.32.31329.0",
          "informationUri": "https://aka.ms/cpp/ca"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true
        }
      ],
      "artifacts": [
        {
          "location": {
            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/core.h"
          },
          "roles": [
            "resultFile"
          ],
          "hashes": {
            "sha-256": "542ad752af0db9340ae260f698b47fb64b5ae780e9cc8d5f54f4555465ca2479"
          }
        },
        {
          "location": {
            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format-inl.h"
          },
          "roles": [
            "resultFile"
          ],
          "hashes": {
            "sha-256": "db7ee9d3bef0e228d8c90108c2953f03434b291554c25b95003b39eaf5e46866"
          }
        },
        {
          "location": {
            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/pattern_formatter-inl.h"
          },
          "roles": [
            "resultFile"
          ],
          "hashes": {
            "sha-256": "6ec3959de95c52ded87277edb995cac5dd2e349d9563771ffb266dc469dcafa4"
          }
        },
        {
          "location": {
            "uri": "file:///C:/Users/coxst/OneDrive/Documents/Repos/OpenGL/Hazel/Hazel/vendor/spdlog/include/spdlog/fmt/bundled/format.h"
          },
          "roles": [
            "resultFile"
          ],
          "hashes": {
            "sha-256": "ec4a8f0a56390f31880677814c7eee661afe639a07f2c684d3141a084cea8781"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/src/hzpch.cpp"
          },
          "roles": [
            "analysisTarget"
          ],
          "hashes": {
            "sha-256": "545ac36d2bcf7eaf87b29914d22b0126a9fd2cce0ad74e5b705a3c10ed8a9f37"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/src/hzpch.h"
          },
          "hashes": {
            "sha-256": "b5467e0e35fab5d11c020fc0c21d31f31dafccc4a68804e57983fcd21a2ead3e"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/src/hazel/log.h"
          },
          "hashes": {
            "sha-256": "6b68c95f5e858cd1f55c15888014d852ef056a4f283522bf4fb3c58757f07b42"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/src/hazel/core.h"
          },
          "hashes": {
            "sha-256": "555dad9c0300c856c974c432d2ad4558d49970b178802d2cba3ecaa9d5f2dca8"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/spdlog.h"
          },
          "hashes": {
            "sha-256": "86d3f76370704532aa0c126bace5d350eebe719caf3c2e4b6ada63f8df5ab70e"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/common.h"
          },
          "hashes": {
            "sha-256": "2fe914416bf799bcf8eea45cf8df3c7ad02cc224236ecb11877fbf58f9e79bdf"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/tweakme.h"
          },
          "hashes": {
            "sha-256": "29ca93db362e8e44f19e3023bf1941a5b9179acd825a17e1c592c1ef794c6a5f"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/null_mutex.h"
          },
          "hashes": {
            "sha-256": "f0d581cadc4076d1347f2bea822799f350a90561523df1b1278314928bef3bdd"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/fmt/fmt.h"
          },
          "hashes": {
            "sha-256": "8ac0a9280fc4bd9bb4c5d9598b57f308848df20800767715a6dabbef1e6d675f"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/common-inl.h"
          },
          "hashes": {
            "sha-256": "ffaf03f2ac8d0f8fc5b7fbcc38ac3aa8772dfafde8f2ff230a00584889afb9eb"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/registry.h"
          },
          "hashes": {
            "sha-256": "9544b5e9871acfec026993d541c0b62a1f9853e06e2a3211b9fb6b7736ad1aac"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/registry-inl.h"
          },
          "hashes": {
            "sha-256": "c052ef06961ea7793ffda141f806753d1d2d42a68f91bde6d770522bbd47cf76"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/periodic_worker.h"
          },
          "hashes": {
            "sha-256": "d339c1a24e02065bd090556058f48a7cf2224541b4afdb1b4589971ef8191da6"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/periodic_worker-inl.h"
          },
          "hashes": {
            "sha-256": "69bb8281d876868eb596c3dc819669956cf1f8276e63554a3449baa75f3879d9"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/logger.h"
          },
          "hashes": {
            "sha-256": "6dd89cbcfa9caddc4bc2b67e684cb10e1421abeb4096eaac49e7846be34d0b22"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/log_msg.h"
          },
          "hashes": {
            "sha-256": "9afbecc6619ad48f74f3f8a2bedac5c1c2833ca3e5f60bdc2a357c6bed64c2c3"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/log_msg-inl.h"
          },
          "hashes": {
            "sha-256": "3775f6fad94db6c42e26d70c80127b8f4084fc5a55a0cbe620ce12d020e52ad0"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/os.h"
          },
          "hashes": {
            "sha-256": "fb1d1217270a6e2e1fdd7cb83f5b3cd2e82561ee31b3588bc0b6bfee0a273c0d"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/os-inl.h"
          },
          "hashes": {
            "sha-256": "141c6cfdb36ca4835d3cd7342a410493c34f09440b647d7c6d928f85ccbae481"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/windows_include.h"
          },
          "hashes": {
            "sha-256": "40d033c32abc93ae75443cbed6c903a6b6fa97c55ee5d198584f7a48a25c8eb0"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/backtracer.h"
          },
          "hashes": {
            "sha-256": "91dbb0c320d022bdbe6a966eb72ca682fb2eeff98c866c91240b8d5c4d738ed1"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/log_msg_buffer.h"
          },
          "hashes": {
            "sha-256": "0fb824a161a7a78e9209033dadbf4245e542152e6d5b553820e209da1c56731a"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/log_msg_buffer-inl.h"
          },
          "hashes": {
            "sha-256": "75a1ef3e399f431b04bfd1a96c62977b7acf7eb57ec1f790cb21c792bbbf7f3d"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/circular_q.h"
          },
          "hashes": {
            "sha-256": "1964106bd887603ba54d2bcfe44445b16dcb3349d6c3d86d0908bdfc1aacff4b"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/backtracer-inl.h"
          },
          "hashes": {
            "sha-256": "953d2a48f055f7b3ba42e842c5a87c484b656b44f89f3881f15f20e3b38ff118"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/logger-inl.h"
          },
          "hashes": {
            "sha-256": "50992d04b64f6680cc5b1618f33034f05618d5b42244db55dbef3c6ac143d299"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/sinks/sink.h"
          },
          "hashes": {
            "sha-256": "dfaf735b02ae0618fd93e24d0a476cef08b94722ba271d3d4938d7ce761ae65d"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/formatter.h"
          },
          "hashes": {
            "sha-256": "4a82465434113c33c603e5518c472712dce8deea21418261b1a19c323ed4935a"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/sinks/sink-inl.h"
          },
          "hashes": {
            "sha-256": "39be3433aaed3a35315ee92e4998d5465ac15b0d088a64383b9aad3620361850"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/pattern_formatter.h"
          },
          "hashes": {
            "sha-256": "b8f46b3f3239c02fc370d93c01515ba671bf904b94882f20aec91b9692b92c2e"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/fmt_helper.h"
          },
          "hashes": {
            "sha-256": "9f38f374087297c8db0a6aaf00f3e88287a9152316de2d392c65c21a277043fd"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/sinks/wincolor_sink.h"
          },
          "hashes": {
            "sha-256": "1b0754cfef68beccd82653a710383345ac44024c0554a04d7e1f4d9007bcf233"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/console_globals.h"
          },
          "hashes": {
            "sha-256": "f40e0e383d07e5022544218097ee3f1383149360c5f5bb93c3b097698e8eb0f5"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/sinks/wincolor_sink-inl.h"
          },
          "hashes": {
            "sha-256": "2e807f777135a0b219ea190f4ac5a91e5a791b233a89a8e341400702f10b935d"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/version.h"
          },
          "hashes": {
            "sha-256": "0c255838b93ff9b4513d48d906cfe1448b573f8fb9d0a248d7d1a0fe629abf1f"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/details/synchronous_factory.h"
          },
          "hashes": {
            "sha-256": "c6131daea0ed4e60b800eb43e91bb23c1b50d8e24d296955ff3da4aa85e57945"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/spdlog-inl.h"
          },
          "hashes": {
            "sha-256": "6c7608a050d2e319d848c96ff8326154f67a30e450256397bdc7f7d8f065d9d5"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/fmt/ostr.h"
          },
          "hashes": {
            "sha-256": "e5fea8867ce157aee3ed91c5fb4b30b68bf8c684878576218134242f4b135e11"
          }
        },
        {
          "location": {
            "uri": "file:///c:/users/coxst/onedrive/documents/repos/opengl/hazel/hazel/vendor/spdlog/include/spdlog/fmt/bundled/ostream.h"
          },
          "hashes": {
            "sha-256": "474467485c4b4c7c8098a670490867997e941bc49598249d892b87bdc5dfe848"
          }
        }
      ]
    }
  ]
}